<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.BudgetMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.Budget">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="trade_data" jdbcType="DATE" property="tradeData" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="pay" jdbcType="VARCHAR" property="pay" />
    <result column="income" jdbcType="VARCHAR" property="income" />
    <result column="pay_name" jdbcType="VARCHAR" property="payName" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="income_name" jdbcType="VARCHAR" property="incomeName" />
    <result column="income_account" jdbcType="VARCHAR" property="incomeAccount" />
    <result column="check_name" jdbcType="VARCHAR" property="checkName" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.macro.mall.model.Budget">
    <result column="amount_remark" jdbcType="LONGVARCHAR" property="amountRemark" />
    <result column="pay_remark" jdbcType="LONGVARCHAR" property="payRemark" />
    <result column="income_remark" jdbcType="LONGVARCHAR" property="incomeRemark" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                  <if test="listItem!=null and listItem!='*'">
                    #{listItem}
                  </if>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trade_data, store_name, type, pay, income, pay_name, pay_account, income_name, 
    income_account, check_name, create_user_id, create_username
  </sql>
  <sql id="Blob_Column_List">
    amount_remark, pay_remark, income_remark, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.macro.mall.model.BudgetExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from budget
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.macro.mall.model.BudgetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from budget
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from budget
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from budget
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.model.BudgetExample">
    delete from budget
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.Budget">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into budget (trade_data, store_name, type, 
      pay, income, pay_name, 
      pay_account, income_name, income_account, 
      check_name, create_user_id, create_username, 
      amount_remark, pay_remark, income_remark, 
      remark)
    values (#{tradeData,jdbcType=DATE}, #{storeName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{pay,jdbcType=VARCHAR}, #{income,jdbcType=VARCHAR}, #{payName,jdbcType=VARCHAR}, 
      #{payAccount,jdbcType=VARCHAR}, #{incomeName,jdbcType=VARCHAR}, #{incomeAccount,jdbcType=VARCHAR}, 
      #{checkName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createUsername,jdbcType=VARCHAR}, 
      #{amountRemark,jdbcType=LONGVARCHAR}, #{payRemark,jdbcType=LONGVARCHAR}, #{incomeRemark,jdbcType=LONGVARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.macro.mall.model.Budget">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into budget
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeData != null">
        trade_data,
      </if>
      <if test="storeName != null and storeName !='*'">
        store_name,
      </if>
      <if test="type != null  and type !='*'">
        type,
      </if>
      <if test="pay != null  and pay !='*'">
        pay,
      </if>
      <if test="income != null  and income !='*'">
        income,
      </if>
      <if test="payName != null  and payName !='*'">
        pay_name,
      </if>
      <if test="payAccount != null  and payAccount !='*'">
        pay_account,
      </if>
      <if test="incomeName != null  and incomeName !='*'">
        income_name,
      </if>
      <if test="incomeAccount != null  and incomeAccount !='*'">
        income_account,
      </if>
      <if test="checkName != null  and checkName !='*'">
        check_name,
      </if>
      <if test="createUserId != null ">
        create_user_id,
      </if>
      <if test="createUsername != null  and createUsername !='*'">
        create_username,
      </if>
      <if test="amountRemark != null  and amountRemark !='*'">
        amount_remark,
      </if>
      <if test="payRemark != null  and payRemark !='*'">
        pay_remark,
      </if>
      <if test="incomeRemark != null  and incomeRemark !='*'">
        income_remark,
      </if>
      <if test="remark != null  and remark !='*'">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeData != null ">
        #{tradeData,jdbcType=DATE},
      </if>
      <if test="storeName != null  and storeName !='*'">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="type != null  and type !='*'">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pay != null  and pay !='*'">
        #{pay,jdbcType=VARCHAR},
      </if>
      <if test="income != null  and income !='*'">
        #{income,jdbcType=VARCHAR},
      </if>
      <if test="payName != null  and payName !='*'">
        #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null  and storeName !='*'">
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="incomeName != null  and incomeName !='*'">
        #{incomeName,jdbcType=VARCHAR},
      </if>
      <if test="incomeAccount != null  and incomeAccount !='*'">
        #{incomeAccount,jdbcType=VARCHAR},
      </if>
      <if test="checkName != null  and checkName !='*'">
        #{checkName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null  ">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUsername != null  and createUsername !='*'">
        #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="amountRemark != null  and amountRemark !='*'">
        #{amountRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="payRemark != null  and payRemark !='*'">
        #{payRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="incomeRemark != null  and incomeRemark !='*'">
        #{incomeRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null  and remark !='*'">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.model.BudgetExample" resultType="java.lang.Long">
    select count(*) from budget
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update budget
    <set>
      <if test="record.id != null ">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeData != null">
        trade_data = #{record.tradeData,jdbcType=DATE},
      </if>
      <if test="record.storeName != null and record.storeName!='*'">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null and record.storeName!='*'">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.pay != null and record.storeName!='*'">
        pay = #{record.pay,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null and record.storeName!='*'">
        income = #{record.income,jdbcType=VARCHAR},
      </if>
      <if test="record.payName != null and record.storeName!='*'">
        pay_name = #{record.payName,jdbcType=VARCHAR},
      </if>
      <if test="record.payAccount != null and record.storeName!='*'">
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.incomeName != null and record.storeName!='*'">
        income_name = #{record.incomeName,jdbcType=VARCHAR},
      </if>
      <if test="record.incomeAccount != null and record.storeName!='*'">
        income_account = #{record.incomeAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.checkName != null and record.storeName!='*'">
        check_name = #{record.checkName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null and record.storeName!='*'">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUsername != null and record.storeName!='*'">
        create_username = #{record.createUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.amountRemark != null and record.storeName!='*'">
        amount_remark = #{record.amountRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.payRemark != null and record.storeName!='*'">
        pay_remark = #{record.payRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.incomeRemark != null and record.storeName!='*'">
        income_remark = #{record.incomeRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null and record.storeName!='*'">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update budget
    set id = #{record.id,jdbcType=INTEGER},
      trade_data = #{record.tradeData,jdbcType=DATE},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      pay = #{record.pay,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=VARCHAR},
      pay_name = #{record.payName,jdbcType=VARCHAR},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      income_name = #{record.incomeName,jdbcType=VARCHAR},
      income_account = #{record.incomeAccount,jdbcType=VARCHAR},
      check_name = #{record.checkName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_username = #{record.createUsername,jdbcType=VARCHAR},
      amount_remark = #{record.amountRemark,jdbcType=LONGVARCHAR},
      pay_remark = #{record.payRemark,jdbcType=LONGVARCHAR},
      income_remark = #{record.incomeRemark,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update budget
    set id = #{record.id,jdbcType=INTEGER},
      trade_data = #{record.tradeData,jdbcType=DATE},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      pay = #{record.pay,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=VARCHAR},
      pay_name = #{record.payName,jdbcType=VARCHAR},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      income_name = #{record.incomeName,jdbcType=VARCHAR},
      income_account = #{record.incomeAccount,jdbcType=VARCHAR},
      check_name = #{record.checkName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_username = #{record.createUsername,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.macro.mall.model.Budget">
    update budget
    <set>
      <if test="tradeData != null">
        trade_data = #{tradeData,jdbcType=DATE},
      </if>
      <if test="storeName != null and storeName!='*'">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="type != null  and type!='*'">
        'type' = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pay != null  and pay!='-1'">
        pay = #{pay,jdbcType=VARCHAR},
      </if>
      <if test="income != null  and income!='-1'">
        income = #{income,jdbcType=VARCHAR},
      </if>
      <if test="payName != null  and payName!='*'">
        pay_name = #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null  and payAccount!='*'">
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="incomeName != null  and incomeName!='*'">
        income_name = #{incomeName,jdbcType=VARCHAR},
      </if>
      <if test="incomeAccount != null and incomeAccount!='*'">
        income_account = #{incomeAccount,jdbcType=VARCHAR},
      </if>
      <if test="checkName != null and checkName!='*'">
        check_name = #{checkName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null ">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUsername != null and createUsername!='*'">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="amountRemark != null and amountRemark!='*'">
        amount_remark = #{amountRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="payRemark != null and payRemark!='*'">
        pay_remark = #{payRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="incomeRemark != null and incomeRemark!='*'">
        income_remark = #{incomeRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null and remark!='*'">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.macro.mall.model.Budget">
    update budget
    set trade_data = #{tradeData,jdbcType=DATE},
      store_name = #{storeName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pay = #{pay,jdbcType=VARCHAR},
      income = #{income,jdbcType=VARCHAR},
      pay_name = #{payName,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      income_name = #{incomeName,jdbcType=VARCHAR},
      income_account = #{incomeAccount,jdbcType=VARCHAR},
      check_name = #{checkName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_username = #{createUsername,jdbcType=VARCHAR},
      amount_remark = #{amountRemark,jdbcType=LONGVARCHAR},
      pay_remark = #{payRemark,jdbcType=LONGVARCHAR},
      income_remark = #{incomeRemark,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.Budget">
    update budget
    set trade_data = #{tradeData,jdbcType=DATE},
      store_name = #{storeName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pay = #{pay,jdbcType=VARCHAR},
      income = #{income,jdbcType=VARCHAR},
      pay_name = #{payName,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      income_name = #{incomeName,jdbcType=VARCHAR},
      income_account = #{incomeAccount,jdbcType=VARCHAR},
      check_name = #{checkName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_username = #{createUsername,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>